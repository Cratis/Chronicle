<Project>
    <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
    <PropertyGroup>
        <AssemblyName>Cratis.Chronicle.Workbench.Embedded</AssemblyName>
        <RootNamespace>Cratis.Chronicle.Workbench.Embedded</RootNamespace>
        <ResourceNamespace>$(RootNamespace).Files</ResourceNamespace>

        <FrontendSourceDir>$(MSBuildThisFileDirectory)../Web</FrontendSourceDir>
        <FrontendBuildDir>$(MSBuildThisFileDirectory)../Web/wwwroot</FrontendBuildDir>
        <FrontendSourcePattern>["**/*.tsx", "**/*.ts"]</FrontendSourcePattern>
        <FrontendHashFile>$(MSBuildThisFileDirectory)/.frontend_hash</FrontendHashFile>

        <EmbedFiles Condition="Exists($(FrontendBuildDir))">true</EmbedFiles>
        <EmbedFiles Condition="!Exists($(FrontendBuildDir))">false</EmbedFiles>

        <GenerateEmbeddedFilesManifest Condition="$(EmbedFiles) == 'true'">true</GenerateEmbeddedFilesManifest>
    </PropertyGroup>

    <ItemGroup>
        <FrameworkReference Include="Microsoft.AspNetCore.App" />
    </ItemGroup>

    <Target Name="BuildDependencies">
        <MSBuild Projects="../../Api/Api.csproj" Targets="Build" Properties="Configuration=$(Configuration);TargetFramework=$(TargetFramework);Repack=$(Repack)" />
    </Target>

    <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

    <PropertyGroup Condition="'$(Repack)' == 'true'">
        <BuildDependsOn>BuildDependencies;$(BuildDependsOn)</BuildDependsOn>
    </PropertyGroup>

    <ItemGroup Condition="'$(Repack)' == 'true'">
        <Reference Include="../../Api/bin/$(Configuration)/$(TargetFramework)/Cratis.Chronicle.Api.dll"/>
    </ItemGroup>

    <ItemGroup Condition="'$(Repack)' != 'true'">
        <ProjectReference Include="../../Api/Api.csproj" />
    </ItemGroup>

    <Target Name="BuildFrontend" BeforeTargets="BeforeBuild" Condition="'$(Configuration)'=='Debug'">
        <Message Importance="high" Text="Building frontend" />
        <Exec
            Command="yarn hash-files -f '$(FrontendSourcePattern)' -a sha256 &gt; $(FrontendHashFile).new"
            WorkingDirectory="$(FrontendSourceDir)"
            ContinueOnError="true">
            <Output TaskParameter="Outputs" PropertyName="HashOutput" />
        </Exec>

        <ReadLinesFromFile File="$(FrontendHashFile)" Condition="Exists('$(FrontendHashFile)')">
            <Output TaskParameter="Lines" ItemName="SavedHash" />
        </ReadLinesFromFile>

        <ReadLinesFromFile File="$(FrontendHashFile).new">
            <Output TaskParameter="Lines" ItemName="NewHash" />
        </ReadLinesFromFile>

        <PropertyGroup>
            <RunFrontendBuild Condition="'@(SavedHash)' != '@(NewHash)' or !Exists('$(FrontendHashFile)')">true</RunFrontendBuild>
        </PropertyGroup>

        <Exec Command="yarn build" WorkingDirectory="$(FrontendSourceDir)" Condition="$(RunFrontendBuild) == 'true'" ContinueOnError="true" />

        <Copy SourceFiles="$(FrontendHashFile).new" DestinationFiles="$(FrontendHashFile)" Condition="Exists('$(FrontendHashFile).new')" ContinueOnError="true" />
        <Delete Files="$(FrontendHashFile).new" Condition="Exists('$(FrontendHashFile).new')" ContinueOnError="true" />
    </Target>

    <ItemGroup>
        <EmbeddedResource Include="$(FrontendBuildDir)/**/*" Condition="$(EmbedFiles) == 'true'">
            <LogicalName>$(ResourceNamespace)/%(RecursiveDir)%(Filename)%(Extension)</LogicalName>
        </EmbeddedResource>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.FileProviders.Embedded" />
        <PackageReference Include="Cratis.Applications" />
    </ItemGroup>
</Project>
