<Project >
    <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

    <PropertyGroup>
        <AssemblyName>Cratis.Chronicle.AspNetCore</AssemblyName>
        <RootNamespace>Cratis.Chronicle.AspNetCore</RootNamespace>
    </PropertyGroup>

    <Target Name="BuildDependencies">
        <Copy SourceFiles="../DotNET/bin/$(Configuration)/$(TargetFramework)/Cratis.Chronicle.dll" DestinationFolder="$(OutDir)"/>
        <Copy SourceFiles="../DotNET/bin/$(Configuration)/$(TargetFramework)/Cratis.Chronicle.pdb" DestinationFolder="$(OutDir)" Condition="Exists('../DotNET/bin/$(Configuration)/$(TargetFramework)/Cratis.Chronicle.pdb')"/>
    </Target>

    <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

    <PropertyGroup Condition="'$(Repack)' == 'true'">
        <BuildDependsOn>BuildDependencies;$(BuildDependsOn)</BuildDependsOn>
    </PropertyGroup>

    <ItemGroup>
        <InternalsVisibleTo Include="Cratis.Chronicle.InProcess"/>
    </ItemGroup>

    <ItemGroup>
        <FrameworkReference Include="Microsoft.AspNetCore.App" />
    </ItemGroup>

    <ItemGroup Condition="'$(Repack)' == 'true'">
        <ProjectReference Include="../DotNET/DotNET.csproj" ReferenceOutputAssembly="false"/>
        <Reference Include="$(OutDir)/Cratis.Chronicle.dll"/>
    </ItemGroup>

    <ItemGroup Condition="'$(Repack)' != 'true'">
        <ProjectReference Include="../DotNET/DotNET.csproj" />
        <ProjectReference Include="../Connections/Connections.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="FluentValidation" />
        <PackageReference Include="Microsoft.Extensions.Hosting" />
    </ItemGroup>

    <!-- When repacking and packaging, inject Cratis.Chronicle as a package dependency -->
    <!-- The PowerShell script modifies the generated nuspec to add the dependency -->
    <Target Name="InjectChroniclePackageDependency" AfterTargets="GenerateNuspec" Condition="'$(Repack)' == 'true' and '$(ContinuePackingAfterGeneratingNuspec)' == 'true'">
        <PropertyGroup>
            <NuspecPath>$(BaseIntermediateOutputPath)$(Configuration)\$(PackageId).$(PackageVersion).nuspec</NuspecPath>
            <InjectScriptPath>$(MSBuildThisFileDirectory)../inject-dependency.ps1</InjectScriptPath>
        </PropertyGroup>
        
        <Message Text="Injecting Cratis.Chronicle v$(PackageVersion) dependency into nuspec" Importance="high" />
        
        <!-- Run PowerShell script to inject the dependency into the nuspec -->
        <Exec Command="pwsh -NoProfile -File &quot;$(InjectScriptPath)&quot; -NuspecPath &quot;$(NuspecPath)&quot; -PackageId &quot;Cratis.Chronicle&quot; -PackageVersion &quot;$(PackageVersion)&quot;" 
              Condition="Exists('$(NuspecPath)')" 
              IgnoreExitCode="false" />
    </Target>
</Project>
