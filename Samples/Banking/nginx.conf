events { worker_connections 1024; }

http {
    server {
        listen 80;
        listen [::]:80;
        server_name localhost;
        root /var/www/html/;
        auth_request /auth;

        location = /auth {
            internal;
            rewrite /validate / break;
            proxy_set_header x-ms-client-principal $cookie_aksiodevprincipal;
            proxy_set_header x-ms-client-principal-id $cookie_aksiodevprincipalid;
            proxy_set_header x-ms-client-principal-name $cookie_aksiodevprincipalname;

            proxy_pass http://host.docker.internal:8091/;
            proxy_set_header Host $http_host;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }

        location /.aksio {
            rewrite ^/.aksio(/.*)$ $1 break;
            proxy_pass http://host.docker.internal:8091;
            proxy_set_header Host $http_host;
        }

        location /.aksio/dev {
            rewrite ^/.aksio/dev(/.*)$ /$1 break;
            proxy_pass http://host.docker.internal:8091;
        }

        location /.aksio/me {
            proxy_pass http://host.docker.internal:5100;
            proxy_set_header Host $http_host;
        }

        location /api {
            rewrite ^/api(/.*)$ $1 break;
            proxy_pass http://host.docker.internal:5100;
            proxy_set_header Host $http_host;
        }

        location / {
            proxy_pass http://host.docker.internal:9100;
            proxy_set_header Accept-Encoding "";

            sub_filter '</head>' '<object id="devToolbarView" type="text/html" data="/.aksio/dev/toolbar.html"></object><script defer src="/.aksio/dev/toolbarViewModel.js"></script></head>';
            sub_filter_once on;
            sub_filter_types text/html;

            proxy_set_header Host $http_host;

            proxy_set_header X-Original-URI $request_uri;
            add_header X-Original-URI $request_uri;
            proxy_set_header x-ai-original-host $http_host;
            add_header x-ai-original-host $http_host;

            auth_request_set $auth_resp_tenant_id $upstream_http_tenant_id;
            proxy_set_header Tenant-ID $auth_resp_tenant_id;
            add_header Tenant-ID $auth_resp_tenant_id;

            auth_request_set $auth_resp_x_zumo_auth $upstream_http_x_zumo_auth;
            proxy_set_header X-ZUMO-AUTH $auth_resp_x_zumo_auth;
            add_header X-ZUMO-AUTH $auth_resp_x_zumo_auth;

            auth_request_set $auth_resp_cookie $sent_http_set_cookie;
            add_header Set-Cookie $auth_resp_cookie;
        }
    }
}
