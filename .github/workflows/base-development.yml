name: Base Development Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: '0.0.0'
        type: string
      release-notes:
        description: 'Release notes'
        required: true
        default: 'No release notes'
        type: string
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
  pull_request:
    types: [closed]
    branches:
      - "**"
    paths:
      - "Docker/BaseDevelopment/**"

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
      publish: ${{ steps.release.outputs.should-publish }}
      prerelease: ${{ steps.release.outputs.prerelease }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Release
        id: release
        uses: cratis/release-action@v1
        with:
          version: ${{ github.event.inputs.version }}
          release-notes: ${{ github.event.inputs.release-notes }}

  publish-docker:
    if: needs.release.outputs.publish == 'true'
    runs-on: ubuntu-latest
    needs: [release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Development Docker Image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Docker/BaseDevelopment/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            cratis/cratis-base:${{ needs.release.outputs.version }}
            cratis/cratis-base:latest
          build-args: |
            VERSION=${{ needs.release.outputs.version }}
