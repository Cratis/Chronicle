name: .NET Build & Integration

env:
  DOTNET_VERSION: "9.0.x"
  DOTNET_CACHE: "dotnet-cache-${{ github.sha }}"
  CRATIS_CHRONICLE_LOCAL_IMAGE: "ghcr.io/cratis/chronicle:${{ github.sha }}"

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - "Source/**"
      - "Integration/**"
      - "!Source/Node/**"
      - "!Source/Workbench/**"
  pull_request:
    branches:
      - "**"
    paths:
      - "Source/**"
      - "Integration/**"
      - "!Source/Node/**"
      - "!Source/Workbench/**"

jobs:
  dotnet-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            ${{ env.DOTNET_VERSION }}

      - uses: actions/cache@v3
        id: dotnet-x64-output
        with:
          path: ./**/bin
          key: ${{ env.DOTNET_CACHE }}

      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: dotnet build --configuration Release -p:DisableProxyGenerator=true

      - name: Publish Docker Image
        run: |
          docker push ${{ env.CRATIS_CHRONICLE_LOCAL_IMAGE }}

  dotnet-build-repack-clients:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            ${{ env.DOTNET_VERSION }}

      - name: Clean output for repackaged clients
        run: dotnet clean
        working-directory: ./Source/Clients

      - name: Build repackaged clients
        run: dotnet build -p:IsPackaging=true --configuration Release -p:Repack=true -p:DisableProxyGenerator=true -p:DisableDockerBuild=true -maxcpucount:1
        working-directory: ./Source/Clients

  specs:
    runs-on: ubuntu-latest
    needs: [dotnet-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            ${{ env.DOTNET_VERSION }}

      - uses: actions/cache@v3
        id: dotnet-x64-output
        with:
          path: ./**/bin
          key: ${{ env.DOTNET_CACHE }}

      - name: Run tests
        run: dotnet test --no-build --configuration Release --framework net9.0 --settings specs.runsettings

  integration-specs:
    runs-on: ubuntu-latest
    needs: [dotnet-build]
    strategy:
      matrix:
        namespace:
          - 'for_EventSequence'
          - 'for_JobsManager'
          - 'for_Reactors'
          - 'for_Reducers'
          - 'Projections'
          - 'AggregateRoots'
    continue-on-error: true
    env:
      NAMESPACE: Cratis.Chronicle.InProcess.Integration.${{ matrix.namespace }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            ${{ env.DOTNET_VERSION }}

      - uses: actions/cache@v3
        id: dotnet-x64-output
        with:
          path: ./**/bin
          key: ${{ env.DOTNET_CACHE }}

      - name: Run integration tests for .Net 9
        working-directory: ./Integration/DotNET.InProcess
        run: dotnet test --no-build --filter FullyQualifiedName~${{ env.NAMESPACE }} --logger "console;verbosity=normal" --configuration Release --framework net9.0

  integration-api:
    runs-on: ubuntu-latest
    needs: [dotnet-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            ${{ env.DOTNET_VERSION }}

      - uses: actions/cache@v3
        id: dotnet-x64-output
        with:
          path: ./**/bin
          key: ${{ env.DOTNET_CACHE }}

      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run API integration tests for .Net 9
        working-directory: ./Integration/Api
        run: dotnet test --no-build --logger "console;verbosity=normal" --configuration Release --framework net9.0
