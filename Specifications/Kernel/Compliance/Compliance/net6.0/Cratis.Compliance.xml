<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cratis.Compliance</name>
    </assembly>
    <members>
        <member name="T:Cratis.Compliance.CompositeEncryptionKeyStore">
            <summary>
            Represents a composite <see cref="T:Cratis.Compliance.IEncryptionKeyStore"/>.
            </summary>
        </member>
        <member name="M:Cratis.Compliance.CompositeEncryptionKeyStore.#ctor(Cratis.Compliance.IEncryptionKeyStore[])">
            <summary>
            Initializes a new instance of the <see cref="T:Cratis.Compliance.CompositeEncryptionKeyStore"/>.
            </summary>
            <param name="inner"></param>
        </member>
        <member name="M:Cratis.Compliance.CompositeEncryptionKeyStore.GetFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.CompositeEncryptionKeyStore.HasFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.CompositeEncryptionKeyStore.SaveFor(Cratis.Compliance.EncryptionKeyIdentifier,Cratis.Compliance.EncryptionKey)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.CompositeEncryptionKeyStore.DeleteFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <inheritdoc/>
        </member>
        <member name="T:Cratis.Compliance.Encryption">
            <summary>
            Represents an implementation of <see cref="T:Cratis.Compliance.IEncryption"/>.
            </summary>
        </member>
        <member name="M:Cratis.Compliance.Encryption.GenerateKey">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.Encryption.Encrypt(System.Byte[],Cratis.Compliance.EncryptionKey)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.Encryption.Decrypt(System.Byte[],Cratis.Compliance.EncryptionKey)">
            <inheritdoc/>
        </member>
        <member name="T:Cratis.Compliance.EncryptionKey">
            <summary>
            Represents a key used in encryption.
            </summary>
            <param name="Value">The actual content of the key.</param>
        </member>
        <member name="M:Cratis.Compliance.EncryptionKey.#ctor(System.Byte[])">
            <summary>
            Represents a key used in encryption.
            </summary>
            <param name="Value">The actual content of the key.</param>
        </member>
        <member name="T:Cratis.Compliance.EncryptionKeyIdentifier">
            <summary>
            Represents the unique identifier of an <see cref="T:Cratis.Compliance.EncryptionKey"/>.
            </summary>
            <param name="Value">The underlying value.</param>
        </member>
        <member name="M:Cratis.Compliance.EncryptionKeyIdentifier.#ctor(System.String)">
            <summary>
            Represents the unique identifier of an <see cref="T:Cratis.Compliance.EncryptionKey"/>.
            </summary>
            <param name="Value">The underlying value.</param>
        </member>
        <member name="M:Cratis.Compliance.EncryptionKeyIdentifier.op_Implicit(System.String)~Cratis.Compliance.EncryptionKeyIdentifier">
            <summary>
            Implicitly convert from <see cref="T:System.String"/> to <see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/>.
            </summary>
            <param name="value"><see cref="T:System.String"/> to convert from.</param>
        </member>
        <member name="T:Cratis.Compliance.IEncryption">
            <summary>
            Defines a system for working with encryption.
            </summary>
        </member>
        <member name="M:Cratis.Compliance.IEncryption.GenerateKey">
            <summary>
            Generate an <see cref="T:Cratis.Compliance.EncryptionKey"/>.
            </summary>
            <returns>A new <see cref="T:Cratis.Compliance.EncryptionKey"/>.</returns>
        </member>
        <member name="M:Cratis.Compliance.IEncryption.Encrypt(System.Byte[],Cratis.Compliance.EncryptionKey)">
            <summary>
            Encrypt bytes with a key.
            </summary>
            <param name="bytes">Bytes to encrypt.</param>
            <param name="key">Key to use.</param>
            <returns>Encrypted bytes.</returns>
        </member>
        <member name="M:Cratis.Compliance.IEncryption.Decrypt(System.Byte[],Cratis.Compliance.EncryptionKey)">
            <summary>
            Decrypt bytes with a key.
            </summary>
            <param name="bytes">Bytes to decrypt.</param>
            <param name="key">Key to use.</param>
            <returns>Decrypted bytes.</returns>
        </member>
        <member name="T:Cratis.Compliance.IEncryptionKeyStore">
            <summary>
            Defines a store for holding <see cref="T:Cratis.Compliance.EncryptionKey">encryption keys</see>.
            </summary>
        </member>
        <member name="M:Cratis.Compliance.IEncryptionKeyStore.SaveFor(Cratis.Compliance.EncryptionKeyIdentifier,Cratis.Compliance.EncryptionKey)">
            <summary>
            Save an <see cref="T:Cratis.Compliance.EncryptionKey"/> for a specific <see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/>.
            </summary>
            <param name="identifier"><see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/> to save for.</param>
            <param name="key">The <see cref="T:Cratis.Compliance.EncryptionKey"/>.</param>
            <returns>Async task.</returns>
        </member>
        <member name="M:Cratis.Compliance.IEncryptionKeyStore.HasFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <summary>
            Check if there is an <see cref="T:Cratis.Compliance.EncryptionKey"/> for a specific <see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/>.
            </summary>
            <param name="identifier"><see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/> to check for.</param>
            <returns>True if there is, false if not.</returns>
        </member>
        <member name="M:Cratis.Compliance.IEncryptionKeyStore.GetFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <summary>
            Get an <see cref="T:Cratis.Compliance.EncryptionKey"/> for a specific <see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/>.
            </summary>
            <param name="identifier"><see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/> to get for.</param>
            <returns>The <see cref="T:Cratis.Compliance.EncryptionKey"/>.</returns>
        </member>
        <member name="M:Cratis.Compliance.IEncryptionKeyStore.DeleteFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <summary>
            Delete an <see cref="T:Cratis.Compliance.EncryptionKey"/> for a specific <see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/>.
            </summary>
            <param name="identifier"><see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/> to delete for.</param>
            <returns>Async task.</returns>
        </member>
        <member name="T:Cratis.Compliance.IJsonComplianceManager">
            <summary>
            Defines a Json serializer that is compliance aware.
            </summary>
        </member>
        <member name="M:Cratis.Compliance.IJsonComplianceManager.Apply(NJsonSchema.JsonSchema,System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Apply compliance rules to JSON.
            </summary>
            <param name="schema"><see cref="T:NJsonSchema.JsonSchema"/> that represents the object.</param>
            <param name="identifier">Identifier of the object.</param>
            <param name="json">JSON to apply rules for.</param>
            <returns>Compliance approved JSON.</returns>
        </member>
        <member name="M:Cratis.Compliance.IJsonComplianceManager.Release(NJsonSchema.JsonSchema,System.String,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Release JSON from compliance rules.
            </summary>
            <param name="schema"><see cref="T:NJsonSchema.JsonSchema"/> that represents the object.</param>
            <param name="identifier">Identifier of the object.</param>
            <param name="json">JSON to release rules for.</param>
            <returns>Released version of the JSON.</returns>
        </member>
        <member name="T:Cratis.Compliance.IJsonCompliancePropertyValueHandler">
            <summary>
            Defines a system that can handle a property for a specific <see cref="T:Cratis.Compliance.ComplianceMetadataType"/>.
            </summary>
        </member>
        <member name="P:Cratis.Compliance.IJsonCompliancePropertyValueHandler.Type">
            <summary>
            Gets the <see cref="T:Cratis.Compliance.ComplianceMetadataType"/> it supports.
            </summary>
        </member>
        <member name="M:Cratis.Compliance.IJsonCompliancePropertyValueHandler.Apply(System.String,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Apply to the given value.
            </summary>
            <param name="identifier">Identifier to use.</param>
            <param name="value">Value to apply to.</param>
            <returns>Applied value.</returns>
        </member>
        <member name="M:Cratis.Compliance.IJsonCompliancePropertyValueHandler.Release(System.String,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Release a given value.
            </summary>
            <param name="identifier">Identifier to use.</param>
            <param name="value">Value to release.</param>
            <returns>Released value.</returns>
        </member>
        <member name="T:Cratis.Compliance.InMemory.InMemoryEncryptionKeyStore">
            <summary>
            Represents an implementation of <see cref="T:Cratis.Compliance.IEncryptionKeyStore"/> for in-memory.
            </summary>
        </member>
        <member name="M:Cratis.Compliance.InMemory.InMemoryEncryptionKeyStore.SaveFor(Cratis.Compliance.EncryptionKeyIdentifier,Cratis.Compliance.EncryptionKey)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.InMemory.InMemoryEncryptionKeyStore.HasFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.InMemory.InMemoryEncryptionKeyStore.GetFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.InMemory.InMemoryEncryptionKeyStore.DeleteFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <inheritdoc/>
        </member>
        <member name="T:Cratis.Compliance.JsonComplianceManager">
            <summary>
            Represents an implementation of <see cref="T:Cratis.Compliance.IJsonComplianceManager"/>.
            </summary>
        </member>
        <member name="M:Cratis.Compliance.JsonComplianceManager.Apply(NJsonSchema.JsonSchema,System.String,Newtonsoft.Json.Linq.JObject)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.JsonComplianceManager.Release(NJsonSchema.JsonSchema,System.String,Newtonsoft.Json.Linq.JObject)">
            <inheritdoc/>
        </member>
        <member name="T:Cratis.Compliance.MissingEncryptionKey">
            <summary>
            Exception that is thrown when an <see cref="T:Cratis.Compliance.EncryptionKey"/> is missing.
            </summary>
        </member>
        <member name="M:Cratis.Compliance.MissingEncryptionKey.#ctor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Cratis.Compliance.MissingEncryptionKey"/> class.
            </summary>
            <param name="identifier"><see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/> that is missing.</param>
        </member>
        <member name="T:Cratis.Compliance.MongoDB.EncryptionKeyForIdentifier">
            <summary>
            Represents the stored version of an <see cref="T:Cratis.Compliance.EncryptionKey"/> for a specific <see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/>.
            </summary>
            <param name="Identifier"><see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/> it is for.</param>
            <param name="Key">The <see cref="T:Cratis.Compliance.EncryptionKey"/>.</param>
        </member>
        <member name="M:Cratis.Compliance.MongoDB.EncryptionKeyForIdentifier.#ctor(Cratis.Compliance.EncryptionKeyIdentifier,Cratis.Compliance.EncryptionKey)">
            <summary>
            Represents the stored version of an <see cref="T:Cratis.Compliance.EncryptionKey"/> for a specific <see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/>.
            </summary>
            <param name="Identifier"><see cref="T:Cratis.Compliance.EncryptionKeyIdentifier"/> it is for.</param>
            <param name="Key">The <see cref="T:Cratis.Compliance.EncryptionKey"/>.</param>
        </member>
        <member name="T:Cratis.Compliance.MongoDB.EncryptionKeyForIdentifierClassMap">
            <summary>
            Represents a class map for <see cref="T:Cratis.Compliance.MongoDB.EncryptionKeyForIdentifier"/>
            </summary>
        </member>
        <member name="M:Cratis.Compliance.MongoDB.EncryptionKeyForIdentifierClassMap.Configure(MongoDB.Bson.Serialization.BsonClassMap{Cratis.Compliance.MongoDB.EncryptionKeyForIdentifier})">
            <inheritdoc/>
        </member>
        <member name="T:Cratis.Compliance.MongoDB.EncryptionKeySerializer">
            <summary>
            Represents a <see cref="T:MongoDB.Bson.Serialization.IBsonSerializer`1"/> for handling serialization of <see cref="T:Cratis.Compliance.EncryptionKey"/>.
            </summary>
        </member>
        <member name="P:Cratis.Compliance.MongoDB.EncryptionKeySerializer.ValueType">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.MongoDB.EncryptionKeySerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.MongoDB.EncryptionKeySerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,Cratis.Compliance.EncryptionKey)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.MongoDB.EncryptionKeySerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.Serialization.BsonSerializationArgs,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.MongoDB.EncryptionKeySerializer.MongoDB#Bson#Serialization#IBsonSerializer#Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext,MongoDB.Bson.Serialization.BsonDeserializationArgs)">
            <inheritdoc/>
        </member>
        <member name="T:Cratis.Compliance.MongoDB.MongoDBEncryptionKeyStore">
            <summary>
            Represents an implementation of <see cref="T:Cratis.Compliance.IEncryptionKeyStore"/> for MongoDB.
            </summary>
        </member>
        <member name="M:Cratis.Compliance.MongoDB.MongoDBEncryptionKeyStore.#ctor(Cratis.Extensions.MongoDB.IMongoDBClientFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Cratis.Compliance.MongoDB.MongoDBEncryptionKeyStore"/> class.
            </summary>
            <param name="mongoDBClientFactory"><see cref="T:Cratis.Extensions.MongoDB.IMongoDBClientFactory"/> to use for accessing database.</param>
        </member>
        <member name="M:Cratis.Compliance.MongoDB.MongoDBEncryptionKeyStore.SaveFor(Cratis.Compliance.EncryptionKeyIdentifier,Cratis.Compliance.EncryptionKey)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.MongoDB.MongoDBEncryptionKeyStore.HasFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.MongoDB.MongoDBEncryptionKeyStore.GetFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.MongoDB.MongoDBEncryptionKeyStore.DeleteFor(Cratis.Compliance.EncryptionKeyIdentifier)">
            <inheritdoc/>
        </member>
        <member name="T:Cratis.Compliance.PIICompliancePropertyValueHandler">
            <summary>
            Represents a <see cref="T:Cratis.Compliance.IJsonCompliancePropertyValueHandler"/> for handling PII.
            </summary>
        </member>
        <member name="P:Cratis.Compliance.PIICompliancePropertyValueHandler.Type">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.PIICompliancePropertyValueHandler.Apply(System.String,Newtonsoft.Json.Linq.JToken)">
            <inheritdoc/>
        </member>
        <member name="M:Cratis.Compliance.PIICompliancePropertyValueHandler.Release(System.String,Newtonsoft.Json.Linq.JToken)">
            <inheritdoc/>
        </member>
    </members>
</doc>
